//#include<stdio.h>
//#include<math.h>
//int main()
//{
//	int i, m, limit;
//	printf("Enter your number:");
//	scanf_s("%d", &m);
//	if (m <= 1)
//		printf("No!\n");
//	else if (m == 2)
//		printf("%d is a prime number!\n", m);
//	else
//	{
//		limit = sqrt(m) + 1;
//		for (i = 2; i <= limit; i++)
//		{
//			if (m % i == 0)
//				break;
//		}
//		if (i > limit)
//			printf("%d is a prime number!\n", m);
//		else
//			printf("No!\n");
//	}
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//	int number;
//	printf("Enter your number:");
//	scanf_s("%d", &number);
//	do
//	{
//		printf("%d", number % 10);
//		number = number / 10;
//	} while (number != 0);
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//	int count = 0, number;
//	printf("Enter your number:");
//	scanf_s("%d", &number);
//	do
//	{
//		count++;
//		number = number / 10;
//	} while (number != 0);
//		printf("It contains %d digits.\n", count);
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//	int count = 0, num = 0;
//	double score, total = 0;
//	printf("Enter scores:");
//	scanf_s("%lf", &score);
//	while (score >= 0)
//	{
//		total += score;
//		num++;
//		if (score < 60)
//			count++;
//		scanf_s("%lf", &score);
//	}
//	if (num != 0)
//	{
//		printf("Average is %.2f\n", total / num);
//		printf("Number of failures is %d\n", count);
//	}
//	else
//		printf("Average is 0\n");
//	return 0;
//}

//#include<stdio.h>
//#include<math.h>
//int main()
//{
//	int denominator=1, flag=1, i=1;
//	double eps, item=1.0, pi=0;
//	printf("Enter eps:");
//	scanf_s("%lf", &eps);
//	while (fabs(item) >= eps) //fabs()求绝对值
//	{
//		pi += item;
//		i++;
//		flag = -flag;
//		denominator += 2;
//		item = flag * 1.0 / denominator;
//	}
//	pi += item;
//	pi *= 4;
//	printf("pi=%.4f\n", pi);
//	printf("i=%d\n", i);
//	return 0;
//}

//#include<stdio.h>
//#include<math.h>
//int main()
//{
//	double a, b, c, d;
//	scanf_s("%lf %lf %lf", &a, &b, &c);
//	d = b * b - 4 * a * c;
//	if (a != 0)
//	{
//		if (d > 0)
//			printf("%.2f\n %.2f\n", (-b + sqrt(d) * 1.0) / (2 * a), (-b - sqrt(d) * 1.0 / (2 * a)));
//		else if (d == 0)
//			printf("%.2f\n", (-b * 1.0 / (2 * a)));
//		else if (d < 0)
//		{
//			if (b != 0)
//				printf("%.2f+%.2fi\n%.2f-%.2fi", (-b) * 1.0 / (2 * a), sqrt(-d) * 1.0 / (2 * a), (-b) * 1.0 / (2 * a), sqrt(-d) * 1.0 / (2 * a));
//			else
//				printf("%.2f\n%.2f\n", sqrt(-d) * 1.0 / (2 * a), -sqrt(-d) * 1.0 / (2 * a));
//		}
//	}
//	else if (a == 0 && b != 0)
//		printf("%.2f\n", (-c) * 1.0 / b);
//	else if (a == 0 && b == 0 && c != 0)
//		printf("Not An Equation");
//	else
//		printf("Zero Equation");
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//	int blank=0, digit=0, i, n, other=0;
//	char ch;
//	printf("Enter n:");
//	scanf_s("%d", &n);
//	getchar();
//	printf("Enter %d characters:", n);
//	for (i = 1; i <= n; i++)
//	{
//		ch = getchar();
//		switch (ch)
//		{
//		case '\0':case'\n':blank++; break;
//		case'0':case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':digit++; break;
//		default:other++; break;
//		}
//	}
//	printf("blank=%d,digit=%d,other=%d", blank, digit, other);
//	return 0;
//}

//#define _CRT_SECURE_NO_WARNINGS
//#include<stdio.h>
//int main()
//{
//	int value1, value2;
//	char op;
//	printf("Typein an expression:");
//	scanf("%d%c%d", &value1, &op, &value2);
//	switch (op)
//	{
//	case '+':printf("=%d\n", value1 + value2); break;
//	case '-':printf("=%d\n", value1 - value2); break;
//	case '*':printf("=%d\n", value1 * value2); break;
//	case '/':
//		if (value2 != 0)
//			printf("=%d\n", value1 / value2);
//		else
//			printf("Divisor can not be 0!\n");
//		break;
//	case '%':
//		if (value2 != 0)
//			printf("=%d\n", value1 % value2);
//		else
//			printf("Divisor can not be 0!\n");
//		break;
//	default:printf("Unknown operator\n"); break;
//	}
//	return 0;
//}


//#include<stdio.h>
//int main()
//{
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10};
//	int k = 7;
//	int size = sizeof(arr) / sizeof(arr[0]);
//	int left = 0, right = size-1;
//	while (left <= right)
//	{
//		int mid = (left + right) / 2;
//		if (arr[mid] > k)
//			right = mid - 1;
//		else if (arr[mid] < k)
//			left = mid + 1;
//		else
//		{
//			printf("nice，找到了，下标为：%d\n", mid);
//			break;
//		}
//		}
//	if (left > right)
//		printf("oh,no，找不到了\n");
//	return 0;
//}
