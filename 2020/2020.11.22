//#include<stdio.h> //求学生平均成绩和及格人数
//int main()
//{
//    int i = 0, n, point, sum = 0, count = 0;
//    double average;
//    scanf("%d", &n);
//    if (n == 0)
//    {
//        average = 0;
//        count = 0;
//    }
//    else
//    {
//        for (i = 1; i <= n; i++)
//        {
//            scanf("%d", &point);
//            if (point >= 60)
//                count++;
//            sum = sum + point;
//        }
//        average = sum * 1.0 / n;
//    }
//    printf("average = %.1f\n", average);
//    printf("count = %d", count);
//    return 0;
//}

//#include <stdio.h>   //使用递归函数计算1到n之和
//int sum(int n);
//int main()
//{
//	int n;
//	scanf_s("%d", &n);
//	printf("%d\n", sum(n));
//	return 0;
//}
//int sum(int n)
//{
//	int result;
//	if (n <= 0)
//		result = 0;
//	else if (n == 1)
//		result = 1;
//	else
//		result = sum(n - 1) + n;
//	return result;
//}

//#include <stdio.h>  //使用函数求余弦函数的近似值
//#include <math.h>
//
//double funcos(double e, double x);
//
//int main()
//{
//    double e, x;
//
//    scanf_s("%lf %lf", &e, &x);
//    printf("cos(%.2f) = %.6f\n", x, funcos(e, x));
//
//    return 0;
//}
//double funcos(double e, double x)
//{
//    int i = 0, flag = -1;
//    double sum = 1, fenzi = 1, num = 1, fenmu = 1;
//
//    for (i = 2; num > e; i += 2)
//    {
//        fenzi = fenzi * x * x;
//        fenmu = fenmu * i * (i - 1);
//        num = fenzi / fenmu;
//        sum = sum + flag * num;
//        flag = -flag;
//    }
//    return sum;
//}

//#include <stdio.h>   //水花仙数
//#include<math.h>
//int narcissistic(int number);
//void PrintN(int m, int n);
//
//int main()
//{
//    int m, n;
//    scanf_s("%d %d", &m, &n);
//    if (narcissistic(m)) printf("%d is a narcissistic number\n", m);
//    PrintN(m, n);
//    if (narcissistic(n)) printf("%d is a narcissistic number\n", n);
//    return 0;
//}
//
//int narcissistic(int number)
//{
//    int count = 0, a, sum = 0;
//    int num = number;
//    do
//    {
//       num= num / 10;
//        count++;
//    } while (num != 0);
//    num = number;
//    while (num != 0)
//    {
//        a = num % 10;
//        sum = sum + pow(a, count);
//        num = num / 10;
//    }
//    if (sum == number)
//        return 1;
//    else
//        return 0;
//}
//void PrintN(int m, int n)
//{
//    int i = 0;
//    for (i = m + 1; i < n; i++)
//    {
//        if (narcissistic(i) == 1)
//            printf("%d\n", i);
//    }
//}

//#include<stdio.h>    //冒泡排序
//void bulle(int arr[],int size)
//{
//	int i = 0;
//	for (i = 0; i < size - 1; i++)
//	{
//		int flag = 1;
//		int j = 0;
//		for (j = 0; j < size - 1 - i; j++)
//		{
//			if (arr[j] < arr[j + 1])
//			{
//				int num = arr[j];
//				arr[j] = arr[j + 1];
//				arr[j + 1] = num;
//				flag = 0;
//			}
//		}
//		if (flag == 1)
//			break;
//	}
//}
//int main()
//{
//	int arr[10];
//	for (int i = 0; i < 10; i++)
//	{
//		scanf_s("%d", &arr[i]);
//	}
//	int size = sizeof(arr) / sizeof(arr[0]);
//	bulle(arr, size);
//	for (int k = 0; k < size; k++)
//	{
//		printf("%d", arr[k]);
//	}
//	return 0;
//}

//#include<stdio.h>  //选择排序
//int main()
//{
//	int i, k, temp, id;
//	int arr[10];
//	for (i = 0; i < 10; i++)
//	{
//		scanf_s("%d", &arr[i]);
//	}
//	for (k = 0; k < 9; k++)
//	{
//		id = k;
//		for (i = k + 1; i < 10; i++)
//		{
//			if (arr[i] > arr[id])
//				id = i;
//		}
//		temp = arr[id];
//		arr[id] = arr[k];
//		arr[k] = temp;
//	}
//	for (i = 0; i < 10; i++)
//	{
//		printf("%d", arr[i]);
//	}
//	return 0;
//}

//#include<stdio.h>  //给出年月日，求第几天
//int day_of_year(int year, int month, int day)
//{
//	int k, leap;
//	int tab[2][13] = {
//		{0,31,28,31,30,31,30,31,31,30,31,30,31},
//		{0,31,29,31,30,31,30,31,31,30,31,30,31}
//	};
//	leap = (year % 4 == 0 && year % 100 != 0 || year % 400 == 0);
//	for(k = 1; k < month; k++)
//	{
//		day = day + tab[leap][k];
//	}
//	return day;
//}
//int main()
//{
//	int year, month, day;
//	scanf_s("%d %d %d", &year, &month, &day);
//	printf("%d", day_of_year( year,  month, day));
//	return 0;
//}
