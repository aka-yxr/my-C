//#include<stdio.h>
//
//int main()
//{
//    int a[20], b[20], c[20],d[20];//定义4个数组，第三个用来存放不重复数,第四个是保留c数组中不重复的数
//    int A, B, i, j = 0, m = 0;
//    scanf_s("%d", &A);//填充a数组
//    for (i = 0; i < A; i++)
//    {
//        scanf_s("%d", &a[i]);
//    }
//    scanf_s("%d", &B);//填充b数组
//    for (i = 0; i < B; i++)
//    {
//        scanf_s("%d", &b[i]);
//    }
//    int k = 0;
//    for (i = 0; i < A; i++)//拿a数组中的数和b数组中的数比较
//    {
//        for ( j = 0; j < B; j++)
//        {
//            if (a[i] == b[j])//如果有就换下一个数，
//                break;
//        }
//        if (j >= B)//如果a中某数和b中所有数比较完，正常结束循环说明此数和b中没有重复的数
//        {
//            c[k] = a[i];//把不重复数安排给c数组
//            k++;
//        }
//    }
//    for (i = 0; i < B; i++)//和上面那个一样，不过是拿b数组中的数和a数组中的数比较
//    {
//        for ( j = 0; j < A; j++)
//        {
//            if (b[i] == a[j])//如果有就换下一个数，
//                break;
//        }
//        if (j >= A)
//        {
//            c[k] = b[i];//把b中不重复的数安排给c
//            k++;
//        }
//    }
//    //接下来要把c中重复的数过滤掉，并且按先后顺序输出数组c
//    int n = 0;
//    for (i = 0; i < k; i++)//c中有k个数
//    {
//       // if (i == m)
//         //   continue;
//        for (j = i+1; j < k; j++)//从第一个数和后面的数比较
//        {
//            if (c[i] == c[j])//如果相等就跳出循环、、
//            {
//                //     m = j;
//                d[n] = c[i];
//                n++;
//            }
//               break;
//        }
//        //if (j >= i)//说明在c中第i个数没有相等的其他数
//        //    printf("%d ", c[i]);
//    }
//    for (i = 0; i < n-1; i++)
//    {
//        printf("%d ", d[n]);
//    }
//    printf("%d", d[n]);
//    return 0;
//}


//#include<stdio.h>
//
//int main()
//{
//    int a[20], b[20], c[20];//定义3个数组，第三个用来存放不重复数
//    int A, B, i, j = 0;
//    scanf("%d", &A);//填充a数组
//    for (i = 0; i < A; i++)
//    {
//        scanf("%d", &a[i]);
//    }
//    scanf("%d", &B);//填充b数组
//    for (i = 0; i < B; i++)
//    {
//        scanf("%d", &b[i]);
//    }
//    int k = 0;
//    for (i = 0; i < A; i++)//拿a数组中的数和b数组中的数比较
//    {
//        for (j = 0; j < B; j++)
//        {
//            if (a[i] == b[j])//如果有就换下一个数，
//                break;
//        }
//        if (j >= B)//如果a中某数和b中所有数比较完，正常结束循环说明此数和b中没有重复的数
//        {
//            c[k] = a[i];//把不重复数安排给c数组
//            k++;
//        }
//    }
//    for (i = 0; i < B; i++)//和上面那个一样，不过是拿b数组中的数和a数组中的数比较
//    {
//        for (j = 0; j < A; j++)
//        {
//            if (b[i] == a[j])//如果有就换下一个数，
//                break;
//        }
//        if (j >= A)
//        {
//            c[k] = b[i];//把b中不重复的数安排给c
//            k++;
//        }
//    }
//    //接下来要把c中重复的数过滤掉，并且按先后顺序输出数组c
//    printf("%d", c[0]);//考虑前俩数是不是重复
//    for (i = 1; i < k; i++)//c中有k个数，从1开始，是因为把前俩数相同的结果已经处理了，
//    {
//        for (j = 0; j < i; j++)//从头开始和第i个数比较
//        {
//            if (c[i] == c[j])//如果相等就跳出循环，
//                break;
//        }
//        if (j >= i)//j大于等于i的时候，说明第i个数后面有和她相同的数，并且只打印前面那个数，把后面和她重复的数过滤出去了
//            //如 3 3 5 -15 6 4 6，第一个6的下标是c[5]，第二个六的下标是c[7]，当i等于5的时候，c[5]和c[7]比较，发现相等，判断7大于5.输出的是c[5]；
//            //到i等于7的时候，c[7]会和c[5]再次比较，发现5不大于等于7，所以并不会输出c[7].这样就很神奇的把重复的数字给过滤出去了
//            printf(" %d", c[i]);//空格前置，是为了最后没有空格
//    }
//
//    return 0;
//}

//#include<stdio.h>
//int main()
//{
//    int n, i;
//    int a[10];
//    scanf_S("%d", &n);
//    for (i = 0; i < n; i++)
//    {
//        scanf_s("%d ", &a[i]);
//    }
//    for (i = n - 1; i > 0; i--)
//    {
//        printf("%d ", a[i]);
//    }
//    printf("%d", a[i]);
//    return 0;
//}

//#include<stdio.h>
//int main()
//{
//    int i, count = 0;
//    char ch[80];
//    char a;//字符变量 a，用来存储要找的字符
//    i = 0;
//    while ((ch[i] = getchar()) != '\n')//输入一串字符串
//    {
//        i++;
//    }
//    ch[i] = '\0';//给字符串手动按一个结尾装置'\0';
//    scanf_s("%c", &a);//输入第二行那个字符串
//    for (i = 0; ch[i] != '\0'; i++)
//    {
//        if (ch[i] == a)//判断一下，有莫有要找的字母。
//            count++;
//    }
//    printf("%d", count);
//    return 0;
//}

//#include<stdio.h>
////☑排序
//int main()
//{
//    int n, i, k, temp, max;
//    int a[10];//先定义数组
//    scanf_s("%d", &n);
//    for (i = 0; i < n; i++)
//    {
//        scanf_s("%d", &a[i]);//填充数组
//    }
//    for (i = 0; i < n - 1; i++)
//    {
//        max = i;//让max等于没有排序的第一个
//        for (k = i + 1; k < n; k++)
//        {
//            if (a[max] < a[k])//如果a【k】比a【max】大，就交换和没有排序里面第一个的位置，这样就把数组剩下里的最大值依次安排在最前面
//                max = k;
//        }
//        temp = a[max];
//        a[max] = a[i];
//        a[i] = temp;
//    }
//    for (i = 0; i < n - 1; i++)//最后输出这个新的数组
//    {
//        printf("%d ", a[i]);
//    }
//    printf("%d", a[i]);
//    return 0;
//}
