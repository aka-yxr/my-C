//#include <stdio.h>
//#include <stdlib.h>
//int main()
//{
//    int j;
//    printf("请输入整数数组内的个数:");
//    scanf_s("%d", &j);
//    int num[j], target;
//    int i = 0;
//    for (i = 0; i <= j; i++)
//    {
//        printf("请输入您的第%d个预选数字", i);
//        scanf_s("%d", &num[i]);
//    }
//    printf("请输入target的值:");
//    scanf_s("%d", &target);
//    int k;
//    for (i = 0; i <= j; i++)
//    {
//        for (k = i + 1; k <= j; k++)
//            if (num[k] + num[i] == target)
//                printf("数组下标为：%d,%d 他们分别是:%d,%d\n", i, k, num[i], num[k]);
//    }
//    return 0;
//}

//#include<stdio.h>
//int main()
//{
//	//int a = 0;
//	//char b = 'w';
//	//int arr[10] = { 0 };
//	//printf("%d\n", sizeof(a));//对待变量，使用sizeof时可以省略小括号，
//	//printf("%d\n", sizeof(int));//类型名时，不能省略括号
//
//	//printf("%d\n", sizeof(b));
//	//printf("%d\n", sizeof(char));
//
//	//printf("%d\n", sizeof(arr));
//	//printf('%d\n', sizeof(int[10]));
//
//	short s = 0;
//	int a = 10;     //sizeof运算符，不参与函数内的运算.
//	printf("%d\n", sizeof(s = a + 5));//计算short类型 s的大小，两个字节
//	printf("%d\n", s);//打印s的值.
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//	int a = 11;
//	a = a | (1 << 2);
//	printf("%d\n", a);
//	a = a & (~(1 << 2));
//	printf("%d\n", a);
//	return 0;
//}

//#include<stdio.h>
//int main()
//{
//	int i, n, count = 0;
//	scanf_s("%d", &n);
//	if (n < 2001 || n>2100)
//		printf("Invalid year!");
//	else 
//	{
//		for (i = 2001; i <= n;i++)
//		{
//			if ((i % 4 == 0 && i % 100 != 0) || i % 400 == 0)
//			{
//				printf("%d\n", i);
//				count++;
//			}
//		}
//		if (count == 0)
//			printf("None");
//	}
//	return 0;
//}
//#include<stdio.h>
//void test1(int arr[])
//{
//	printf("%d\n", sizeof(arr));//接收数组首元素地址
//}
//void test2(char ch[])
//{
//	printf("%d\n", sizeof(ch));//接收数组首元素地址
//}
//int main()
//{
//	int arr[10] = { 0 };//40
//	char ch[10] = { 0 };//10
//	printf("%d\n", sizeof(arr));
//	printf("%d\n", sizeof(ch));
//	test1(arr);
//	test2(ch);
//	return 0;
//}

//#include<stdio.h>
//int  main()
//{
//	/*int a = 3;
//	int b = 5;
//	int c = a && b;
//	int d = a || b;
//	printf("c=%d\nd=%d\n", c, d);*/
//	int i = 0, a = 0, b = 2, c = 3, d = 4;
//	i = a++ && ++b && d++;
//	printf("a=%d\nb=%d\nc=%d\nd=%d\n", a, b, c, d);
//	return 0;
//}
